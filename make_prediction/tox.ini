[tox]
envlist = test_package, typechecks, stylechecks, lint
skipsdist = True
skip_missing_interpreters = true

[testenv]
install_command = pip install {opts} {packages}

[testenv:test_package]
deps =
	-rtest_requirements.txt

depends =
    scania: clean
    report: ml_api

setenv =
	PYTHONPATH=.
	PYTHONHASHSEED=0

commands=
    pytest \
	-s \
	-vv \
	{posargs:tests/} \
	-m "not smoke" \
  	--cov=ml_api \
  	--cov-append

[testenv:report]
commands =
    coverage report
    coverage html
deps = coverage
skip_install = true

[testenv:clean]
commands = coverage erase
deps = coverage
skip_install = true

; [testenv:train]
; envdir = {toxworkdir}/test_package
; deps =
; 	{[testenv:test_package]deps}

; setenv =
; 	{[testenv:test_package]setenv}

; commands=
; 	python regression_model/train_pipeline.py


[testenv:typechecks]
envdir = {toxworkdir}/test_package

deps =
	{[testenv:test_package]deps}

commands = {posargs:mypy ml_api}


[testenv:stylechecks]
envdir = {toxworkdir}/test_package

deps =
	{[testenv:test_package]deps}

commands = {posargs:flake8 ml_api tests}


[testenv:lint]
envdir = {toxworkdir}/test_package

deps =
	{[testenv:test_package]deps}

commands =
	isort  ml_api tests
	black ml_api tests
	mypy ml_api
  	flake8 ml_api

[flake8]
ignore = W605,E302,E41, W503, F401, E501
exclude = .git,env
max-line-length = 90